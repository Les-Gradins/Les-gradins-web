{"version":3,"sources":["./src/app/pages/welcome/welcome.component.ts","./src/app/pages/welcome/welcome.component.html","./node_modules/ng-zorro-antd/__ivy_ngcc__/fesm2015/ng-zorro-antd-core-transition-patch.js","./node_modules/ng-zorro-antd/__ivy_ngcc__/fesm2015/ng-zorro-antd-button.js","./node_modules/ng-zorro-antd/__ivy_ngcc__/fesm2015/ng-zorro-antd-core-wave.js","./src/app/pages/welcome/welcome-routing.module.ts","./src/app/pages/welcome/welcome.module.ts"],"names":[],"mappings":"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AAAA;AAAA;AAAA;AAAA;AAA+C;AACgB;AAC0G;AACjG;AACZ;AACL;AACY;AACpC;AAC+B;AACf;AACgC;AACxB;;AAEvD;AACA;AACA;AACA;AACwC;AACY;AACR;AACF;AACG;AACiB;;AAE9D;AACA,kDAAkD;AAClD,IAAI,uDAAgB;AACpB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4CAAO;AACnC,4BAA4B,4CAAO;AACnC;AACA;AACA;AACA;AACA,kBAAkB,gEAAS;AAC3B;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,gEAAS;AAChG;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA,YAAY,iFAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gEAAS,kBAAkB,6DAAM,uCAAuC,gEAAS;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,qCAAqC,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,CAAC,uDAAgB,GAAG,+DAAwB,CAAC,yEAAsB,GAAG,+DAAwB,CAAC,gEAAqB,MAAM;AACxV,yBAAyB,+DAAwB,EAAE,0KAA0K;AAC7N,QAAQ,4DAAqB,WAAW,kEAAe,KAAK,wDAAU;AACtE,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,gFAAgF;AACvF,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,iNAAiN,qCAAqC,kEAA2B,oNAAoN;AACvf,QAAQ,6DAAsB;AAC9B,QAAQ,wDAAiB;AACzB,QAAQ,0DA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CA;AACA,oCAAoC;AACpC,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4DAAc;AAChD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,mCAAmC,+DAAwB,CAAC,oDAAa,GAAG,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,4BAA4B,+DAAwB,CAAC,0FAAqB,MAAM,+DAAwB,CAAC,yDAAW,GAAG;AACpU,uBAAuB,+DAAwB,EAAE,0IAA0I,qCAAqC,wBAAwB;AACxP;AACA,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,kCAAkC,GAAG;AAC3G,KAAK,6BAA6B,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,0FAAqB,IAAI,GAAG;AACxG,KAAK,gCAAgC,OAAO,oDAAM,SAAS,yDAAW,IAAI;AAC1E;AACA;AACA,uBAAuB,OAAO,mDAAK,EAAE;AACrC;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,oDAAa,EAAE,GAAG,OAAO,wDAAiB,EAAE,GAAG;AACrF,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,GAAG;AACnB,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B,uBAAuB,0FAAqB;AAC5C,aAAa,GAAG,GAAG;AACnB,sBAAsB,oDAAM;AAC5B,uBAAuB,yDAAW;AAClC,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,kCAAkC;AACxF,oBAAoB,8DAAuB,EAAE,qBAAqB;AAClE,oBAAoB,8DAAuB,EAAE,YAAY,oEAAc,IAAI;AAC3E,cAAc,oDAAoD,gEAAyB,gBAAgB,4BAA4B,0BAA0B,EAAE,wBAAwB,SAAS,oEAAc,EAAE,EAAE,wBAAwB,0BAA0B,EAAE,EAAE,EAAE,EAAE;AAChR,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,sDAAQ;AACtB;AACA,0BAA0B,oEAAc;AACxC;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE8I;;AAE9I,mD;;;;;;;;;;;;AC7PA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACA;;;AAEvD,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mEAAgB,EAAE;CAC1C,CAAC;AAMK,MAAM,oBAAoB;;wFAApB,oBAAoB;mGAApB,oBAAoB;uGAHtB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,oBAAoB,uFAFrB,4DAAY;;;;;;;;;;;;;ACRxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgE;AAET;AACD;AACF;;AAS7C,MAAM,aAAa;;0EAAb,aAAa;4FAAb,aAAa;iGAFb,CAAC,+DAAc,CAAC,YAHlB,CAAC,4EAAoB,CAAC,EAEH,mEAAc;mIAG/B,aAAa,mBAJT,mEAAgB,aADrB,4EAAoB,aAEpB,mEAAgB,EAAE,mEAAc","file":"pages-welcome-welcome-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Tracklist } from 'src/tracklist';\nimport { ChansonService } from '../chanson.service';\nimport { Chanson } from '../song';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss'],\n  providers: [ChansonService]\n})\nexport class WelcomeComponent implements OnInit {\n  public selectedSong: Chanson\n  constructor(private chansonService: ChansonService, private router: Router) { }\n\n  ngOnInit() {\n    this.selectedSong = Tracklist[0];\n  }\n\n  getNext(){\n    let next: number = this.selectedSong.tracknumber == 12 ? 0 : this.selectedSong.tracknumber;\n    console.log(next)\n    this.selectedSong = Tracklist[next];\n  }\n\n  getPrec(){\n    let prec: number = this.selectedSong.tracknumber == 1 ? 11 : this.selectedSong.tracknumber - 2;\n    console.log(prec)\n    this.selectedSong = Tracklist[prec];\n  }\n\n  selectSong(){\n    this.chansonService.setSelectedSong(this.selectedSong)\n    this.router.navigateByUrl('/chanson')\n  }\n\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n\n<body>\n\n\n    <button class='button' type='button'>\n    press to scan fingerprint\n    <svg width=\"55vh\" height=\"55vh\">\n      <image width=\"100%\" height=\"100%\" xlink:href=\"../assets/logo.png\" />\n    </svg>\n    \n    \n    </button>\n    <div class='selected-song'>\n\n        <button class=\"button-chanson\" (click)=\"getPrec()\" margin=\"30px\"><i nz-icon nzType=\"left\"></i>Backward</button>\n        <div class='button-chanson' (click)=\"selectSong()\">\n            <div class='flex-item'> {{selectedSong.trackname}} </div>\n        </div>\n        <button class=\"button-chanson\" (click)=\"getNext()\" margin=\"30px\">Forward<i nz-icon nzType=\"right\"></i></button>\n    </div>\n\n\n</body>\n\n</html>","import { PlatformModule } from '@angular/cdk/platform';\nimport { Directive, ElementRef, Renderer2, Input, NgModule } from '@angular/core';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/**\n * hack the bug\n * angular router change with unexpected transition trigger after calling applicationRef.attachView\n * https://github.com/angular/angular/issues/34718\n */\nimport * as ɵngcc0 from '@angular/core';\nclass NzTransitionPatchDirective {\n    constructor(elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.hidden = null;\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'hidden', '');\n    }\n    setHiddenAttribute() {\n        if (this.hidden === true) {\n            this.renderer.setAttribute(this.elementRef.nativeElement, 'hidden', '');\n        }\n        else if (this.hidden === false || this.hidden === null) {\n            this.renderer.removeAttribute(this.elementRef.nativeElement, 'hidden');\n        }\n        else if (typeof this.hidden === 'string') {\n            this.renderer.setAttribute(this.elementRef.nativeElement, 'hidden', this.hidden);\n        }\n    }\n    ngOnChanges() {\n        this.setHiddenAttribute();\n    }\n    ngAfterViewInit() {\n        this.setHiddenAttribute();\n    }\n}\nNzTransitionPatchDirective.ɵfac = function NzTransitionPatchDirective_Factory(t) { return new (t || NzTransitionPatchDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nNzTransitionPatchDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NzTransitionPatchDirective, selectors: [[\"\", \"nz-button\", \"\"], [\"nz-button-group\"], [\"\", \"nz-icon\", \"\"], [\"\", \"nz-menu-item\", \"\"], [\"\", \"nz-submenu\", \"\"], [\"nz-select-top-control\"], [\"nz-select-placeholder\"], [\"nz-input-group\"]], inputs: { hidden: \"hidden\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nNzTransitionPatchDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nNzTransitionPatchDirective.propDecorators = {\n    hidden: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTransitionPatchDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[nz-button], nz-button-group, [nz-icon], [nz-menu-item], [nz-submenu], nz-select-top-control, nz-select-placeholder, nz-input-group'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { hidden: [{\n            type: Input\n        }] }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTransitionPatchModule {\n}\nNzTransitionPatchModule.ɵfac = function NzTransitionPatchModule_Factory(t) { return new (t || NzTransitionPatchModule)(); };\nNzTransitionPatchModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NzTransitionPatchModule });\nNzTransitionPatchModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzTransitionPatchModule, { declarations: function () { return [NzTransitionPatchDirective]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [NzTransitionPatchDirective]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTransitionPatchModule, [{\n        type: NgModule,\n        args: [{\n                imports: [PlatformModule],\n                exports: [NzTransitionPatchDirective],\n                declarations: [NzTransitionPatchDirective]\n            }]\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzTransitionPatchDirective as ɵNzTransitionPatchDirective, NzTransitionPatchModule as ɵNzTransitionPatchModule };\n\n//# sourceMappingURL=ng-zorro-antd-core-transition-patch.js.map","import { __decorate, __metadata } from 'tslib';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, ChangeDetectorRef, Renderer2, Optional, ContentChild, Input, NgModule } from '@angular/core';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { warnDeprecation } from 'ng-zorro-antd/core/logger';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { NzIconDirective, NzIconModule } from 'ng-zorro-antd/icon';\nimport { Subject } from 'rxjs';\nimport { takeUntil, startWith, filter } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { ɵNzTransitionPatchModule } from 'ng-zorro-antd/core/transition-patch';\nimport { NzWaveModule } from 'ng-zorro-antd/core/wave';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from 'ng-zorro-antd/icon';\nimport * as ɵngcc5 from 'ng-zorro-antd/core/transition-patch';\n\nconst _c0 = [\"nz-button\", \"\"];\nfunction NzButtonComponent_i_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 1);\n} }\nconst _c1 = [\"*\"];\nconst NZ_CONFIG_MODULE_NAME = 'button';\nclass NzButtonComponent {\n    constructor(elementRef, cdr, renderer, nzConfigService, directionality) {\n        this.elementRef = elementRef;\n        this.cdr = cdr;\n        this.renderer = renderer;\n        this.nzConfigService = nzConfigService;\n        this.directionality = directionality;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n        this.nzBlock = false;\n        this.nzGhost = false;\n        this.nzSearch = false;\n        this.nzLoading = false;\n        this.nzDanger = false;\n        this.disabled = false;\n        this.tabIndex = null;\n        this.nzType = null;\n        this.nzShape = null;\n        this.nzSize = 'default';\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n        this.loading$ = new Subject();\n        // TODO: move to host after View Engine deprecation\n        this.elementRef.nativeElement.classList.add('ant-btn');\n        this.nzConfigService\n            .getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => {\n            this.cdr.markForCheck();\n        });\n    }\n    insertSpan(nodes, renderer) {\n        nodes.forEach(node => {\n            if (node.nodeName === '#text') {\n                const span = renderer.createElement('span');\n                const parent = renderer.parentNode(node);\n                renderer.insertBefore(parent, span, node);\n                renderer.appendChild(span, node);\n            }\n        });\n    }\n    assertIconOnly(element, renderer) {\n        const listOfNode = Array.from(element.childNodes);\n        const iconCount = listOfNode.filter(node => node.nodeName === 'I').length;\n        const noText = listOfNode.every(node => node.nodeName !== '#text');\n        const noSpan = listOfNode.every(node => node.nodeName !== 'SPAN');\n        const isIconOnly = noSpan && noText && iconCount >= 1;\n        if (isIconOnly) {\n            renderer.addClass(element, 'ant-btn-icon-only');\n        }\n    }\n    ngOnInit() {\n        var _a;\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n    }\n    ngOnChanges(changes) {\n        const { nzLoading, nzType } = changes;\n        if (nzLoading) {\n            this.loading$.next(this.nzLoading);\n        }\n        if ((nzType === null || nzType === void 0 ? void 0 : nzType.currentValue) === 'danger') {\n            warnDeprecation(`'danger' value of 'nzType' in Button is going to be removed in 12.0.0. Please use 'nzDanger' instead.`);\n        }\n    }\n    ngAfterViewInit() {\n        this.assertIconOnly(this.elementRef.nativeElement, this.renderer);\n        this.insertSpan(this.elementRef.nativeElement.childNodes, this.renderer);\n    }\n    ngAfterContentInit() {\n        this.loading$\n            .pipe(startWith(this.nzLoading), filter(() => !!this.nzIconDirectiveElement), takeUntil(this.destroy$))\n            .subscribe(loading => {\n            const nativeElement = this.nzIconDirectiveElement.nativeElement;\n            if (loading) {\n                this.renderer.setStyle(nativeElement, 'display', 'none');\n            }\n            else {\n                this.renderer.removeStyle(nativeElement, 'display');\n            }\n        });\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzButtonComponent.ɵfac = function NzButtonComponent_Factory(t) { return new (t || NzButtonComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nNzButtonComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzButtonComponent, selectors: [[\"button\", \"nz-button\", \"\"], [\"a\", \"nz-button\", \"\"]], contentQueries: function NzButtonComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NzIconDirective, 1, ElementRef);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nzIconDirectiveElement = _t.first);\n    } }, hostVars: 32, hostBindings: function NzButtonComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex === null ? null : ctx.tabIndex)(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"ant-btn-primary\", ctx.nzType === \"primary\")(\"ant-btn-dashed\", ctx.nzType === \"dashed\")(\"ant-btn-link\", ctx.nzType === \"link\")(\"ant-btn-text\", ctx.nzType === \"text\")(\"ant-btn-danger\", ctx.nzType === \"danger\")(\"ant-btn-circle\", ctx.nzShape === \"circle\")(\"ant-btn-round\", ctx.nzShape === \"round\")(\"ant-btn-lg\", ctx.nzSize === \"large\")(\"ant-btn-sm\", ctx.nzSize === \"small\")(\"ant-btn-dangerous\", ctx.nzDanger)(\"ant-btn-loading\", ctx.nzLoading)(\"ant-btn-background-ghost\", ctx.nzGhost)(\"ant-btn-block\", ctx.nzBlock)(\"ant-input-search-button\", ctx.nzSearch)(\"ant-btn-rtl\", ctx.dir === \"rtl\");\n    } }, inputs: { nzBlock: \"nzBlock\", nzGhost: \"nzGhost\", nzSearch: \"nzSearch\", nzLoading: \"nzLoading\", nzDanger: \"nzDanger\", disabled: \"disabled\", tabIndex: \"tabIndex\", nzType: \"nzType\", nzShape: \"nzShape\", nzSize: \"nzSize\" }, exportAs: [\"nzButton\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], attrs: _c0, ngContentSelectors: _c1, decls: 2, vars: 1, consts: [[\"nz-icon\", \"\", \"nzType\", \"loading\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"loading\"]], template: function NzButtonComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, NzButtonComponent_i_0_Template, 1, 0, \"i\", 0);\n        ɵngcc0.ɵɵprojection(1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzLoading);\n    } }, directives: [ɵngcc3.NgIf, ɵngcc4.NzIconDirective, ɵngcc5.ɵNzTransitionPatchDirective], encapsulation: 2, changeDetection: 0 });\nNzButtonComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: Renderer2 },\n    { type: NzConfigService },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nNzButtonComponent.propDecorators = {\n    nzIconDirectiveElement: [{ type: ContentChild, args: [NzIconDirective, { read: ElementRef },] }],\n    nzBlock: [{ type: Input }],\n    nzGhost: [{ type: Input }],\n    nzSearch: [{ type: Input }],\n    nzLoading: [{ type: Input }],\n    nzDanger: [{ type: Input }],\n    disabled: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    nzType: [{ type: Input }],\n    nzShape: [{ type: Input }],\n    nzSize: [{ type: Input }]\n};\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzButtonComponent.prototype, \"nzBlock\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzButtonComponent.prototype, \"nzGhost\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzButtonComponent.prototype, \"nzSearch\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzButtonComponent.prototype, \"nzLoading\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzButtonComponent.prototype, \"nzDanger\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzButtonComponent.prototype, \"disabled\", void 0);\n__decorate([\n    WithConfig(),\n    __metadata(\"design:type\", String)\n], NzButtonComponent.prototype, \"nzSize\", void 0);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzButtonComponent, [{\n        type: Component,\n        args: [{\n                selector: 'button[nz-button], a[nz-button]',\n                exportAs: 'nzButton',\n                preserveWhitespaces: false,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <i nz-icon nzType=\"loading\" *ngIf=\"nzLoading\"></i>\n    <ng-content></ng-content>\n  `,\n                host: {\n                    '[class.ant-btn-primary]': `nzType === 'primary'`,\n                    '[class.ant-btn-dashed]': `nzType === 'dashed'`,\n                    '[class.ant-btn-link]': `nzType === 'link'`,\n                    '[class.ant-btn-text]': `nzType === 'text'`,\n                    '[class.ant-btn-danger]': `nzType === 'danger'`,\n                    '[class.ant-btn-circle]': `nzShape === 'circle'`,\n                    '[class.ant-btn-round]': `nzShape === 'round'`,\n                    '[class.ant-btn-lg]': `nzSize === 'large'`,\n                    '[class.ant-btn-sm]': `nzSize === 'small'`,\n                    '[class.ant-btn-dangerous]': `nzDanger`,\n                    '[class.ant-btn-loading]': `nzLoading`,\n                    '[class.ant-btn-background-ghost]': `nzGhost`,\n                    '[class.ant-btn-block]': `nzBlock`,\n                    '[class.ant-input-search-button]': `nzSearch`,\n                    '[class.ant-btn-rtl]': `dir === 'rtl'`,\n                    '[attr.tabindex]': 'disabled ? -1 : (tabIndex === null ? null : tabIndex)',\n                    '[attr.disabled]': 'disabled || null'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc1.NzConfigService }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { nzBlock: [{\n            type: Input\n        }], nzGhost: [{\n            type: Input\n        }], nzSearch: [{\n            type: Input\n        }], nzLoading: [{\n            type: Input\n        }], nzDanger: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], tabIndex: [{\n            type: Input\n        }], nzType: [{\n            type: Input\n        }], nzShape: [{\n            type: Input\n        }], nzSize: [{\n            type: Input\n        }], nzIconDirectiveElement: [{\n            type: ContentChild,\n            args: [NzIconDirective, { read: ElementRef }]\n        }] }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzButtonGroupComponent {\n    constructor(elementRef, directionality) {\n        this.elementRef = elementRef;\n        this.directionality = directionality;\n        this.nzSize = 'default';\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n        // TODO: move to host after View Engine deprecation\n        this.elementRef.nativeElement.classList.add('ant-btn-group');\n    }\n    ngOnInit() {\n        var _a;\n        this.dir = this.directionality.value;\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n        });\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzButtonGroupComponent.ɵfac = function NzButtonGroupComponent_Factory(t) { return new (t || NzButtonGroupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nNzButtonGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzButtonGroupComponent, selectors: [[\"nz-button-group\"]], hostVars: 6, hostBindings: function NzButtonGroupComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ant-btn-group-lg\", ctx.nzSize === \"large\")(\"ant-btn-group-sm\", ctx.nzSize === \"small\")(\"ant-btn-group-rtl\", ctx.dir === \"rtl\");\n    } }, inputs: { nzSize: \"nzSize\" }, exportAs: [\"nzButtonGroup\"], ngContentSelectors: _c1, decls: 1, vars: 0, template: function NzButtonGroupComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\nNzButtonGroupComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nNzButtonGroupComponent.propDecorators = {\n    nzSize: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzButtonGroupComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-button-group',\n                exportAs: 'nzButtonGroup',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                host: {\n                    '[class.ant-btn-group-lg]': `nzSize === 'large'`,\n                    '[class.ant-btn-group-sm]': `nzSize === 'small'`,\n                    '[class.ant-btn-group-rtl]': `dir === 'rtl'`\n                },\n                preserveWhitespaces: false,\n                template: `\n    <ng-content></ng-content>\n  `\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { nzSize: [{\n            type: Input\n        }] }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzButtonModule {\n}\nNzButtonModule.ɵfac = function NzButtonModule_Factory(t) { return new (t || NzButtonModule)(); };\nNzButtonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NzButtonModule });\nNzButtonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[BidiModule, CommonModule, NzWaveModule, NzIconModule, ɵNzTransitionPatchModule], ɵNzTransitionPatchModule, NzWaveModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzButtonModule, { declarations: function () { return [NzButtonComponent, NzButtonGroupComponent]; }, imports: function () { return [BidiModule, CommonModule, NzWaveModule, NzIconModule, ɵNzTransitionPatchModule]; }, exports: function () { return [NzButtonComponent, NzButtonGroupComponent, ɵNzTransitionPatchModule, NzWaveModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzButtonModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [NzButtonComponent, NzButtonGroupComponent],\n                exports: [NzButtonComponent, NzButtonGroupComponent, ɵNzTransitionPatchModule, NzWaveModule],\n                imports: [BidiModule, CommonModule, NzWaveModule, NzIconModule, ɵNzTransitionPatchModule]\n            }]\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzButtonComponent, NzButtonGroupComponent, NzButtonModule };\n\n//# sourceMappingURL=ng-zorro-antd-button.js.map","import { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { InjectionToken, Directive, NgZone, ElementRef, Optional, Inject, PLATFORM_ID, Input, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport * as ɵngcc0 from '@angular/core';\nclass NzWaveRenderer {\n    constructor(triggerElement, ngZone, insertExtraNode, platformId) {\n        this.triggerElement = triggerElement;\n        this.ngZone = ngZone;\n        this.insertExtraNode = insertExtraNode;\n        this.platformId = platformId;\n        this.waveTransitionDuration = 400;\n        this.styleForPseudo = null;\n        this.extraNode = null;\n        this.lastTime = 0;\n        this.onClick = (event) => {\n            if (!this.triggerElement ||\n                !this.triggerElement.getAttribute ||\n                this.triggerElement.getAttribute('disabled') ||\n                event.target.tagName === 'INPUT' ||\n                this.triggerElement.className.indexOf('disabled') >= 0) {\n                return;\n            }\n            this.fadeOutWave();\n        };\n        this.platform = new Platform(this.platformId);\n        this.clickHandler = this.onClick.bind(this);\n        this.bindTriggerEvent();\n    }\n    get waveAttributeName() {\n        return this.insertExtraNode ? 'ant-click-animating' : 'ant-click-animating-without-extra-node';\n    }\n    bindTriggerEvent() {\n        if (this.platform.isBrowser) {\n            this.ngZone.runOutsideAngular(() => {\n                this.removeTriggerEvent();\n                if (this.triggerElement) {\n                    this.triggerElement.addEventListener('click', this.clickHandler, true);\n                }\n            });\n        }\n    }\n    removeTriggerEvent() {\n        if (this.triggerElement) {\n            this.triggerElement.removeEventListener('click', this.clickHandler, true);\n        }\n    }\n    removeStyleAndExtraNode() {\n        if (this.styleForPseudo && document.body.contains(this.styleForPseudo)) {\n            document.body.removeChild(this.styleForPseudo);\n            this.styleForPseudo = null;\n        }\n        if (this.insertExtraNode && this.triggerElement.contains(this.extraNode)) {\n            this.triggerElement.removeChild(this.extraNode);\n        }\n    }\n    destroy() {\n        this.removeTriggerEvent();\n        this.removeStyleAndExtraNode();\n    }\n    fadeOutWave() {\n        const node = this.triggerElement;\n        const waveColor = this.getWaveColor(node);\n        node.setAttribute(this.waveAttributeName, 'true');\n        if (Date.now() < this.lastTime + this.waveTransitionDuration) {\n            return;\n        }\n        if (this.isValidColor(waveColor)) {\n            if (!this.styleForPseudo) {\n                this.styleForPseudo = document.createElement('style');\n            }\n            this.styleForPseudo.innerHTML = `\n      [ant-click-animating-without-extra-node='true']::after, .ant-click-animating-node {\n        --antd-wave-shadow-color: ${waveColor};\n      }`;\n            document.body.appendChild(this.styleForPseudo);\n        }\n        if (this.insertExtraNode) {\n            if (!this.extraNode) {\n                this.extraNode = document.createElement('div');\n            }\n            this.extraNode.className = 'ant-click-animating-node';\n            node.appendChild(this.extraNode);\n        }\n        this.lastTime = Date.now();\n        this.runTimeoutOutsideZone(() => {\n            node.removeAttribute(this.waveAttributeName);\n            this.removeStyleAndExtraNode();\n        }, this.waveTransitionDuration);\n    }\n    isValidColor(color) {\n        return (!!color &&\n            color !== '#ffffff' &&\n            color !== 'rgb(255, 255, 255)' &&\n            this.isNotGrey(color) &&\n            !/rgba\\(\\d*, \\d*, \\d*, 0\\)/.test(color) &&\n            color !== 'transparent');\n    }\n    isNotGrey(color) {\n        const match = color.match(/rgba?\\((\\d*), (\\d*), (\\d*)(, [\\.\\d]*)?\\)/);\n        if (match && match[1] && match[2] && match[3]) {\n            return !(match[1] === match[2] && match[2] === match[3]);\n        }\n        return true;\n    }\n    getWaveColor(node) {\n        const nodeStyle = getComputedStyle(node);\n        return (nodeStyle.getPropertyValue('border-top-color') || // Firefox Compatible\n            nodeStyle.getPropertyValue('border-color') ||\n            nodeStyle.getPropertyValue('background-color'));\n    }\n    runTimeoutOutsideZone(fn, delay) {\n        this.ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n    }\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst NZ_WAVE_GLOBAL_DEFAULT_CONFIG = {\n    disabled: false\n};\nconst NZ_WAVE_GLOBAL_CONFIG = new InjectionToken('nz-wave-global-options', {\n    providedIn: 'root',\n    factory: NZ_WAVE_GLOBAL_CONFIG_FACTORY\n});\nfunction NZ_WAVE_GLOBAL_CONFIG_FACTORY() {\n    return NZ_WAVE_GLOBAL_DEFAULT_CONFIG;\n}\nclass NzWaveDirective {\n    constructor(ngZone, elementRef, config, animationType, platformId) {\n        this.ngZone = ngZone;\n        this.elementRef = elementRef;\n        this.config = config;\n        this.animationType = animationType;\n        this.platformId = platformId;\n        this.nzWaveExtraNode = false;\n        this.waveDisabled = false;\n        this.waveDisabled = this.isConfigDisabled();\n    }\n    get disabled() {\n        return this.waveDisabled;\n    }\n    get rendererRef() {\n        return this.waveRenderer;\n    }\n    isConfigDisabled() {\n        let disabled = false;\n        if (this.config && typeof this.config.disabled === 'boolean') {\n            disabled = this.config.disabled;\n        }\n        if (this.animationType === 'NoopAnimations') {\n            disabled = true;\n        }\n        return disabled;\n    }\n    ngOnDestroy() {\n        if (this.waveRenderer) {\n            this.waveRenderer.destroy();\n        }\n    }\n    ngOnInit() {\n        this.renderWaveIfEnabled();\n    }\n    renderWaveIfEnabled() {\n        if (!this.waveDisabled && this.elementRef.nativeElement) {\n            this.waveRenderer = new NzWaveRenderer(this.elementRef.nativeElement, this.ngZone, this.nzWaveExtraNode, this.platformId);\n        }\n    }\n    disable() {\n        this.waveDisabled = true;\n        if (this.waveRenderer) {\n            this.waveRenderer.removeTriggerEvent();\n            this.waveRenderer.removeStyleAndExtraNode();\n        }\n    }\n    enable() {\n        // config priority\n        this.waveDisabled = this.isConfigDisabled() || false;\n        if (this.waveRenderer) {\n            this.waveRenderer.bindTriggerEvent();\n        }\n    }\n}\nNzWaveDirective.ɵfac = function NzWaveDirective_Factory(t) { return new (t || NzWaveDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NZ_WAVE_GLOBAL_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); };\nNzWaveDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NzWaveDirective, selectors: [[\"\", \"nz-wave\", \"\"], [\"button\", \"nz-button\", \"\", 3, \"nzType\", \"link\", 3, \"nzType\", \"text\"]], inputs: { nzWaveExtraNode: \"nzWaveExtraNode\" }, exportAs: [\"nzWave\"] });\nNzWaveDirective.ctorParameters = () => [\n    { type: NgZone },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NZ_WAVE_GLOBAL_CONFIG,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\n];\nNzWaveDirective.propDecorators = {\n    nzWaveExtraNode: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzWaveDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[nz-wave],button[nz-button]:not([nzType=\"link\"]):not([nzType=\"text\"])',\n                exportAs: 'nzWave'\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [NZ_WAVE_GLOBAL_CONFIG]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, { nzWaveExtraNode: [{\n            type: Input\n        }] }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzWaveModule {\n}\nNzWaveModule.ɵfac = function NzWaveModule_Factory(t) { return new (t || NzWaveModule)(); };\nNzWaveModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NzWaveModule });\nNzWaveModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzWaveModule, { declarations: function () { return [NzWaveDirective]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [NzWaveDirective]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzWaveModule, [{\n        type: NgModule,\n        args: [{\n                imports: [PlatformModule],\n                exports: [NzWaveDirective],\n                declarations: [NzWaveDirective]\n            }]\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NZ_WAVE_GLOBAL_CONFIG, NZ_WAVE_GLOBAL_CONFIG_FACTORY, NZ_WAVE_GLOBAL_DEFAULT_CONFIG, NzWaveDirective, NzWaveModule, NzWaveRenderer };\n\n//# sourceMappingURL=ng-zorro-antd-core-wave.js.map","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WelcomeComponent } from './welcome.component';\n\nconst routes: Routes = [\n  { path: '', component: WelcomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WelcomeRoutingModule { }\n","import { NgModule } from '@angular/core';\n\nimport { WelcomeRoutingModule } from './welcome-routing.module';\n\nimport { WelcomeComponent } from './welcome.component';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { ChansonService } from '../chanson.service';\n\n\n@NgModule({\n  imports: [WelcomeRoutingModule],\n  declarations: [WelcomeComponent],\n  exports: [WelcomeComponent, NzButtonModule],\n  providers: [ChansonService]\n})\nexport class WelcomeModule { }\n"],"sourceRoot":"webpack:///"}